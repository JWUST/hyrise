// Copyright (c) 2012 Hasso-Plattner-Institut fuer Softwaresystemtechnik GmbH. All rights reserved.
#ifndef SRC_LIB_ACCESS_RADIXJOIN_H_
#define SRC_LIB_ACCESS_RADIXJOIN_H_

#include "access/system/ParallelizablePlanOperation.h"

namespace hyrise {
namespace access {

class RadixJoin : public ParallelizablePlanOperation {
public:
  void executePlanOperation();
  static std::shared_ptr<PlanOperation> parse(Json::Value &data);
  const std::string vname();
  void setBits1(const uint32_t b);
  void setBits2(const uint32_t b);
  uint32_t bits1() const;
  uint32_t bits2() const;

  virtual std::vector<std::shared_ptr<Task> > applyDynamicParallelization(size_t maxTaskRunTime);
protected:
  uint determineDynamicCount(size_t maxTaskRunTime);

private:
  uint32_t _bits1;
  uint32_t _bits2;

  int table_size[7] = {144600000, 72300000, 14460000, 7230000, 1446000, 723000, 144600};

int lookup[7][121][2] = {{{435, 241}, {491, 209}, {447, 233}, {461, 225}, {476, 217}, {316, 352}, {304, 368}, {423, 249}, {413, 256}, {294, 384}, {284, 400}, {373, 288}, {392, 272}, {341, 320}, {357, 304}, {524, 193}, {275, 416}, {327, 336}, {507, 201}, {564, 177}, {609, 161}, {543, 185}, {585, 169}, {259, 448}, {635, 153}, {267, 432}, {728, 129}, {694, 137}, {252, 464}, {662, 145}, {804, 113}, {853, 105}, {763, 121}, {246, 480}, {240, 496}, {960, 89}, {234, 512}, {225, 544}, {901, 97}, {1101, 73}, {217, 576}, {1026, 81}, {209, 608}, {1795, 32}, {1188, 65}, {1817, 31}, {1309, 56}, {203, 640}, {1322, 55}, {1291, 57}, {1199, 64}, {1240, 61}, {1842, 30}, {1279, 58}, {1266, 59}, {1249, 60}, {1225, 62}, {1211, 63}, {1368, 52}, {1335, 54}, {198, 672}, {1354, 53}, {1868, 29}, {1418, 49}, {1404, 50}, {1476, 46}, {1386, 51}, {193, 704}, {1459, 47}, {1898, 28}, {1443, 48}, {1490, 45}, {1764, 33}, {1529, 43}, {1611, 39}, {1509, 44}, {1549, 42}, {1661, 37}, {1688, 36}, {1633, 38}, {190, 736}, {1710, 35}, {1979, 25}, {1567, 41}, {2020, 24}, {187, 768}, {1737, 34}, {1592, 40}, {2060, 23}, {1952, 26}, {1922, 27}, {184, 800}, {2077, 22}, {183, 832}, {2116, 21}, {181, 864}, {180, 896}, {2148, 20}, {179, 928}, {2236, 19}, {180, 960}, {2360, 18}, {180, 992}, {2454, 17}, {180, 1024}, {2583, 16}, {2735, 15}, {2896, 14}, {3102, 13}, {3334, 12}, {3574, 11}, {3937, 10}, {4272, 9}, {4735, 8}, {5322, 7}, {6082, 6}, {7104, 5}, {8563, 4}, {10817, 3}, {14841, 2}, {24116, 1}},
{{129, 225}, {125, 233}, {111, 272}, {122, 241}, {119, 249}, {132, 217}, {106, 288}, {116, 256}, {136, 209}, {102, 304}, {183, 145}, {192, 137}, {156, 177}, {98, 320}, {145, 193}, {141, 201}, {150, 185}, {175, 153}, {95, 336}, {168, 161}, {162, 169}, {92, 352}, {223, 113}, {235, 105}, {201, 129}, {211, 121}, {285, 81}, {90, 368}, {87, 384}, {266, 89}, {346, 61}, {338, 63}, {335, 64}, {342, 62}, {85, 400}, {250, 97}, {361, 57}, {84, 416}, {369, 55}, {365, 56}, {306, 73}, {82, 432}, {81, 448}, {387, 51}, {391, 50}, {331, 65}, {396, 49}, {350, 60}, {353, 59}, {79, 464}, {357, 58}, {509, 31}, {501, 32}, {78, 480}, {517, 30}, {428, 43}, {422, 44}, {77, 496}, {465, 37}, {472, 36}, {373, 54}, {401, 48}, {434, 42}, {409, 47}, {493, 33}, {526, 29}, {378, 53}, {382, 52}, {486, 34}, {458, 38}, {479, 35}, {77, 512}, {411, 46}, {534, 28}, {417, 45}, {570, 24}, {452, 39}, {561, 25}, {76, 544}, {445, 40}, {581, 23}, {439, 41}, {551, 26}, {75, 576}, {592, 22}, {543, 27}, {75, 608}, {603, 21}, {75, 640}, {678, 18}, {715, 17}, {644, 19}, {76, 672}, {613, 20}, {760, 16}, {77, 704}, {802, 15}, {853, 14}, {78, 736}, {79, 768}, {980, 12}, {911, 13}, {1064, 11}, {80, 800}, {83, 832}, {1149, 10}, {85, 864}, {88, 896}, {1256, 9}, {90, 928}, {1383, 8}, {93, 960}, {96, 992}, {1541, 7}, {99, 1024}, {1746, 6}, {2017, 5}, {2404, 4}, {2999, 3}, {4144, 2}, {6566, 1}},
{{32, 89}, {34, 81}, {35, 73}, {22, 153}, {21, 161}, {38, 65}, {38, 64}, {26, 129}, {39, 62}, {26, 121}, {25, 137}, {40, 61}, {39, 63}, {24, 145}, {30, 97}, {23, 169}, {29, 105}, {27, 113}, {20, 177}, {40, 58}, {19, 185}, {41, 57}, {41, 56}, {42, 55}, {40, 59}, {41, 60}, {19, 193}, {43, 52}, {42, 54}, {43, 53}, {44, 50}, {43, 51}, {45, 48}, {21, 201}, {44, 49}, {45, 47}, {46, 45}, {46, 46}, {21, 209}, {47, 43}, {47, 44}, {20, 217}, {48, 42}, {49, 41}, {49, 40}, {20, 225}, {50, 39}, {20, 233}, {50, 38}, {51, 37}, {52, 36}, {20, 241}, {19, 249}, {53, 35}, {53, 34}, {54, 33}, {55, 32}, {19, 256}, {55, 31}, {56, 30}, {57, 29}, {19, 272}, {58, 28}, {61, 25}, {62, 24}, {60, 26}, {59, 27}, {19, 288}, {62, 23}, {19, 304}, {64, 22}, {20, 320}, {65, 21}, {66, 20}, {69, 19}, {73, 18}, {20, 336}, {20, 352}, {76, 17}, {81, 16}, {21, 368}, {85, 15}, {21, 384}, {91, 14}, {22, 400}, {97, 13}, {105, 12}, {113, 11}, {22, 416}, {122, 10}, {23, 432}, {24, 448}, {24, 464}, {134, 9}, {25, 480}, {26, 496}, {149, 8}, {27, 512}, {169, 7}, {193, 6}, {29, 544}, {230, 5}, {274, 4}, {31, 576}, {345, 3}, {468, 2}, {33, 608}, {35, 640}, {38, 672}, {41, 704}, {44, 736}, {47, 768}, {743, 1}, {50, 800}, {53, 832}, {56, 864}, {60, 896}, {64, 928}, {67, 960}, {71, 992}, {76, 1024}},
{{15, 121}, {16, 105}, {14, 137}, {14, 129}, {15, 113}, {14, 153}, {16, 97}, {14, 145}, {17, 89}, {14, 161}, {18, 81}, {13, 177}, {13, 169}, {18, 73}, {19, 65}, {20, 64}, {20, 62}, {20, 61}, {13, 185}, {20, 63}, {13, 193}, {21, 55}, {13, 201}, {20, 60}, {20, 59}, {20, 58}, {21, 57}, {21, 56}, {22, 52}, {21, 54}, {13, 209}, {21, 53}, {22, 51}, {22, 50}, {22, 49}, {22, 48}, {23, 47}, {13, 217}, {23, 45}, {22, 46}, {13, 225}, {23, 43}, {23, 44}, {24, 42}, {13, 233}, {24, 41}, {24, 40}, {24, 39}, {13, 241}, {25, 38}, {13, 249}, {25, 37}, {25, 36}, {25, 35}, {26, 33}, {13, 256}, {26, 34}, {26, 32}, {27, 31}, {14, 272}, {28, 29}, {27, 30}, {29, 28}, {29, 25}, {14, 288}, {29, 26}, {30, 24}, {29, 27}, {31, 23}, {14, 304}, {31, 22}, {14, 320}, {31, 21}, {32, 20}, {15, 336}, {34, 19}, {35, 18}, {15, 352}, {37, 17}, {39, 16}, {16, 368}, {42, 15}, {17, 384}, {45, 14}, {17, 400}, {48, 13}, {51, 12}, {18, 416}, {55, 11}, {19, 432}, {60, 10}, {20, 448}, {21, 464}, {66, 9}, {21, 480}, {22, 496}, {73, 8}, {24, 512}, {83, 7}, {111, 5}, {95, 6}, {133, 4}, {26, 544}, {167, 3}, {225, 2}, {366, 1}, {29, 576}, {31, 608}, {34, 640}, {36, 672}, {39, 704}, {42, 736}, {45, 768}, {48, 800}, {51, 832}, {55, 864}, {58, 896}, {63, 928}, {67, 960}, {71, 992}, {74, 1024}},
{{4, 121}, {4, 105}, {4, 97}, {4, 89}, {4, 137}, {4, 129}, {4, 113}, {4, 81}, {9, 15}, {4, 153}, {4, 145}, {7, 22}, {7, 30}, {6, 43}, {4, 161}, {6, 44}, {5, 60}, {5, 59}, {5, 58}, {4, 169}, {5, 177}, {7, 29}, {6, 36}, {6, 37}, {4, 73}, {5, 51}, {5, 65}, {5, 50}, {5, 185}, {5, 193}, {6, 38}, {5, 62}, {5, 64}, {5, 63}, {5, 61}, {5, 53}, {5, 52}, {5, 49}, {5, 57}, {7, 23}, {6, 31}, {5, 201}, {5, 45}, {5, 46}, {5, 55}, {5, 209}, {5, 56}, {6, 217}, {8, 21}, {7, 28}, {5, 54}, {6, 42}, {6, 39}, {6, 225}, {6, 35}, {17, 7}, {9, 14}, {15, 8}, {9, 16}, {6, 233}, {5, 47}, {5, 48}, {6, 32}, {6, 241}, {6, 41}, {7, 24}, {22, 5}, {7, 249}, {12, 11}, {19, 6}, {14, 9}, {13, 10}, {11, 12}, {27, 4}, {10, 13}, {9, 17}, {33, 3}, {44, 2}, {7, 27}, {8, 20}, {8, 19}, {7, 25}, {8, 18}, {6, 40}, {6, 34}, {7, 26}, {6, 33}, {71, 1}, {7, 256}, {8, 272}, {8, 288}, {9, 304}, {9, 320}, {10, 336}, {10, 352}, {11, 368}, {12, 384}, {13, 400}, {13, 416}, {14, 432}, {15, 448}, {16, 464}, {17, 480}, {18, 496}, {19, 512}, {21, 544}, {24, 576}, {26, 608}, {29, 640}, {32, 672}, {35, 704}, {38, 736}, {41, 768}, {44, 800}, {48, 832}, {51, 864}, {55, 896}, {59, 928}, {63, 960}, {67, 992}, {71, 1024}},
{{4, 21}, {4, 28}, {3, 42}, {3, 56}, {9, 7}, {3, 55}, {4, 35}, {3, 61}, {3, 63}, {3, 62}, {3, 64}, {5, 14}, {3, 81}, {3, 49}, {3, 105}, {3, 57}, {3, 48}, {3, 47}, {3, 89}, {3, 113}, {3, 121}, {3, 41}, {14, 4}, {11, 5}, {17, 3}, {8, 8}, {4, 29}, {10, 6}, {22, 2}, {4, 36}, {7, 9}, {7, 10}, {6, 11}, {6, 13}, {5, 15}, {6, 12}, {3, 129}, {5, 16}, {3, 50}, {3, 51}, {4, 27}, {5, 17}, {5, 18}, {5, 19}, {4, 34}, {5, 20}, {3, 40}, {4, 22}, {4, 30}, {4, 25}, {4, 23}, {4, 33}, {4, 26}, {4, 32}, {4, 39}, {4, 24}, {4, 37}, {4, 31}, {3, 73}, {3, 43}, {3, 45}, {3, 46}, {3, 54}, {4, 38}, {3, 44}, {3, 53}, {3, 52}, {3, 65}, {3, 153}, {3, 59}, {3, 58}, {3, 60}, {3, 97}, {35, 1}, {3, 161}, {3, 137}, {3, 145}, {4, 169}, {4, 177}, {4, 185}, {4, 193}, {4, 201}, {4, 209}, {5, 217}, {5, 225}, {5, 233}, {5, 241}, {5, 249}, {6, 256}, {6, 272}, {7, 288}, {7, 304}, {8, 320}, {9, 336}, {9, 352}, {10, 368}, {11, 384}, {12, 400}, {13, 416}, {14, 432}, {15, 448}, {15, 464}, {16, 480}, {18, 496}, {19, 512}, {21, 544}, {24, 576}, {26, 608}, {29, 640}, {32, 672}, {34, 704}, {37, 736}, {41, 768}, {44, 800}, {48, 832}, {51, 864}, {54, 896}, {58, 928}, {62, 960}, {66, 992}, {70, 1024}},
{{2, 7}, {3, 2}, {5, 1}, {2, 3}, {2, 4}, {2, 14}, {2, 5}, {2, 6}, {2, 8}, {2, 15}, {2, 9}, {1, 10}, {1, 11}, {2, 13}, {2, 21}, {2, 12}, {2, 22}, {2, 27}, {2, 35}, {2, 30}, {2, 28}, {2, 29}, {2, 37}, {2, 36}, {2, 16}, {2, 17}, {2, 41}, {2, 51}, {2, 23}, {2, 42}, {2, 43}, {2, 19}, {2, 50}, {2, 45}, {2, 49}, {2, 44}, {2, 52}, {2, 46}, {2, 38}, {2, 18}, {2, 24}, {2, 53}, {2, 59}, {2, 25}, {2, 20}, {2, 39}, {2, 26}, {1, 60}, {2, 56}, {2, 57}, {2, 55}, {2, 54}, {2, 33}, {2, 32}, {2, 61}, {2, 34}, {2, 31}, {2, 62}, {2, 58}, {2, 40}, {2, 65}, {2, 64}, {2, 63}, {2, 48}, {2, 47}, {2, 73}, {2, 81}, {2, 89}, {2, 97}, {2, 105}, {2, 113}, {2, 121}, {2, 129}, {2, 137}, {2, 145}, {3, 153}, {3, 161}, {3, 169}, {3, 177}, {3, 185}, {3, 193}, {4, 201}, {4, 209}, {4, 217}, {4, 225}, {4, 233}, {5, 241}, {5, 249}, {5, 256}, {6, 272}, {6, 288}, {7, 304}, {8, 320}, {8, 336}, {9, 352}, {10, 368}, {11, 384}, {11, 400}, {12, 416}, {13, 432}, {14, 448}, {15, 464}, {16, 480}, {17, 496}, {18, 512}, {21, 544}, {23, 576}, {26, 608}, {28, 640}, {32, 672}, {34, 704}, {37, 736}, {41, 768}, {44, 800}, {48, 832}, {52, 864}, {55, 896}, {59, 928}, {63, 960}, {67, 992}, {70, 1024}}};


void distributePartitions(
          const int partitions,
          const int join_count,
          const int current_join,
          int &first,
          int &last) const;

void copyTaskAttributesFromThis(std::shared_ptr<PlanOperation> to);

std::vector<std::shared_ptr<Task> > build_probe_side(std::string prefix,
                                                          field_t &fields,
                                                          uint probe_par,
                                                          uint32_t bits1,
                                                          uint32_t bits2,
                                                          std::shared_ptr<Task> input);

std::vector<std::shared_ptr<Task> > build_hash_side(std::string prefix,
                                                          field_t &fields,
                                                          uint probe_par,
                                                          uint32_t bits1,
                                                          uint32_t bits2,
                                                          std::shared_ptr<Task> input);

};

}
}


#endif  // SRC_LIB_ACCESS_RADIXJOIN_H_

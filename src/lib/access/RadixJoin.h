// Copyright (c) 2012 Hasso-Plattner-Institut fuer Softwaresystemtechnik GmbH. All rights reserved.
#ifndef SRC_LIB_ACCESS_RADIXJOIN_H_
#define SRC_LIB_ACCESS_RADIXJOIN_H_

#include "access/system/ParallelizablePlanOperation.h"

namespace hyrise {
namespace access {

class RadixJoin : public ParallelizablePlanOperation {
public:
  void executePlanOperation();
  static std::shared_ptr<PlanOperation> parse(Json::Value &data);
  const std::string vname();
  void setBits1(const uint32_t b);
  void setBits2(const uint32_t b);
  uint32_t bits1() const;
  uint32_t bits2() const;

  virtual std::vector<std::shared_ptr<Task> > applyDynamicParallelization(size_t maxTaskRunTime);
protected:
  uint determineDynamicCount(size_t maxTaskRunTime);

private:
  uint32_t _bits1;
  uint32_t _bits2;

  int table_size[7] = {144600000, 72300000, 14460000, 7230000, 1446000, 723000, 144600};

int lookup[7][121][2] = {{{182, 928}, {182, 960}, {182, 992}, {182, 896}, {183, 1024}, {183, 864}, {185, 832}, {186, 800}, {188, 768}, {191, 736}, {195, 704}, {199, 672}, {204, 640}, {210, 608}, {218, 576}, {226, 544}, {235, 512}, {240, 496}, {247, 480}, {253, 464}, {260, 448}, {267, 432}, {275, 416}, {284, 400}, {294, 384}, {304, 368}, {316, 352}, {327, 336}, {341, 320}, {356, 304}, {373, 288}, {392, 272}, {412, 256}, {422, 249}, {433, 241}, {446, 233}, {460, 225}, {474, 217}, {490, 209}, {505, 201}, {522, 193}, {541, 185}, {561, 177}, {582, 169}, {606, 161}, {631, 153}, {659, 145}, {690, 137}, {723, 129}, {758, 121}, {798, 113}, {847, 105}, {894, 97}, {952, 89}, {1016, 81}, {1090, 73}, {1174, 65}, {1186, 64}, {1197, 63}, {1210, 62}, {1225, 61}, {1234, 60}, {1251, 59}, {1263, 58}, {1275, 57}, {1292, 56}, {1305, 55}, {1318, 54}, {1336, 53}, {1349, 52}, {1367, 51}, {1384, 50}, {1398, 49}, {1423, 48}, {1437, 47}, {1454, 46}, {1468, 45}, {1487, 44}, {1506, 43}, {1525, 42}, {1542, 41}, {1567, 40}, {1585, 39}, {1607, 38}, {1634, 37}, {1659, 36}, {1681, 35}, {1705, 34}, {1733, 33}, {1762, 32}, {1784, 31}, {1808, 30}, {1833, 29}, {1862, 28}, {1884, 27}, {1913, 26}, {1937, 25}, {1978, 24}, {2016, 23}, {2033, 22}, {2069, 21}, {2100, 20}, {2184, 19}, {2302, 18}, {2389, 17}, {2512, 16}, {2655, 15}, {2805, 14}, {2997, 13}, {3213, 12}, {3433, 11}, {3767, 10}, {4070, 9}, {4486, 8}, {5008, 7}, {5672, 6}, {6548, 5}, {7765, 4}, {9562, 3}, {12609, 2}, {18646, 1}},
{{76, 608}, {76, 576}, {76, 640}, {77, 544}, {77, 672}, {78, 512}, {78, 704}, {79, 496}, {79, 480}, {80, 736}, {80, 464}, {81, 768}, {81, 448}, {83, 800}, {83, 432}, {84, 416}, {85, 832}, {86, 400}, {87, 864}, {88, 384}, {90, 896}, {90, 368}, {92, 928}, {93, 352}, {95, 960}, {95, 336}, {98, 992}, {99, 320}, {102, 1024}, {102, 304}, {106, 288}, {111, 272}, {116, 256}, {119, 249}, {122, 241}, {125, 233}, {128, 225}, {132, 217}, {136, 209}, {140, 201}, {145, 193}, {150, 185}, {156, 177}, {161, 169}, {168, 161}, {175, 153}, {182, 145}, {191, 137}, {200, 129}, {210, 121}, {221, 113}, {234, 105}, {248, 97}, {264, 89}, {282, 81}, {303, 73}, {328, 65}, {331, 64}, {334, 63}, {338, 62}, {342, 61}, {345, 60}, {349, 59}, {353, 58}, {357, 57}, {361, 56}, {364, 55}, {369, 54}, {374, 53}, {377, 52}, {382, 51}, {386, 50}, {391, 49}, {396, 48}, {402, 47}, {406, 46}, {411, 45}, {416, 44}, {422, 43}, {428, 42}, {433, 41}, {439, 40}, {445, 39}, {451, 38}, {458, 37}, {464, 36}, {471, 35}, {478, 34}, {485, 33}, {493, 32}, {500, 31}, {508, 30}, {516, 29}, {524, 28}, {533, 27}, {541, 26}, {550, 25}, {559, 24}, {570, 23}, {580, 22}, {590, 21}, {600, 20}, {630, 19}, {662, 18}, {697, 17}, {738, 16}, {779, 15}, {827, 14}, {882, 13}, {945, 12}, {1021, 11}, {1100, 10}, {1198, 9}, {1312, 8}, {1452, 7}, {1629, 6}, {1861, 5}, {2182, 4}, {2657, 3}, {3521, 2}, {5083, 1}},
{{19, 193}, {20, 185}, {20, 249}, {20, 256}, {20, 272}, {20, 288}, {20, 177}, {20, 304}, {20, 241}, {20, 320}, {20, 225}, {20, 233}, {21, 217}, {21, 352}, {21, 336}, {21, 161}, {21, 209}, {21, 201}, {22, 368}, {22, 153}, {22, 384}, {23, 400}, {23, 169}, {23, 416}, {24, 432}, {25, 145}, {25, 137}, {25, 448}, {26, 464}, {26, 129}, {26, 121}, {27, 480}, {27, 496}, {27, 113}, {28, 512}, {29, 105}, {30, 97}, {30, 544}, {32, 89}, {32, 576}, {34, 81}, {34, 608}, {35, 73}, {37, 640}, {38, 65}, {38, 64}, {39, 63}, {39, 62}, {39, 61}, {40, 672}, {40, 58}, {40, 59}, {41, 57}, {41, 56}, {41, 60}, {41, 55}, {42, 54}, {42, 53}, {43, 704}, {43, 52}, {43, 51}, {44, 50}, {44, 49}, {45, 48}, {45, 47}, {45, 46}, {45, 45}, {46, 736}, {47, 44}, {47, 43}, {47, 42}, {48, 41}, {49, 40}, {49, 768}, {49, 39}, {50, 38}, {50, 37}, {51, 36}, {52, 800}, {52, 35}, {52, 34}, {53, 33}, {54, 32}, {55, 31}, {55, 832}, {56, 30}, {57, 29}, {57, 28}, {58, 27}, {58, 864}, {59, 26}, {60, 25}, {61, 24}, {61, 23}, {62, 896}, {63, 22}, {64, 21}, {65, 20}, {66, 928}, {68, 19}, {70, 960}, {71, 18}, {74, 992}, {75, 17}, {79, 1024}, {79, 16}, {83, 15}, {88, 14}, {94, 13}, {101, 12}, {109, 11}, {117, 10}, {129, 9}, {141, 8}, {160, 7}, {181, 6}, {212, 5}, {249, 4}, {307, 3}, {398, 2}, {576, 1}},
{{13, 233}, {13, 241}, {13, 225}, {13, 209}, {13, 249}, {13, 217}, {13, 201}, {13, 177}, {13, 256}, {13, 193}, {14, 185}, {14, 169}, {14, 161}, {14, 145}, {14, 153}, {14, 272}, {14, 137}, {15, 288}, {15, 129}, {15, 304}, {15, 121}, {15, 320}, {15, 113}, {15, 336}, {16, 105}, {16, 352}, {16, 97}, {17, 89}, {17, 368}, {18, 384}, {18, 81}, {18, 73}, {18, 400}, {19, 65}, {19, 416}, {19, 64}, {19, 62}, {19, 63}, {20, 61}, {20, 60}, {20, 432}, {20, 58}, {20, 59}, {21, 55}, {21, 57}, {21, 56}, {21, 54}, {21, 448}, {21, 53}, {21, 50}, {21, 51}, {22, 52}, {22, 464}, {22, 48}, {22, 49}, {22, 46}, {22, 47}, {23, 45}, {23, 480}, {23, 44}, {23, 43}, {23, 42}, {24, 41}, {24, 496}, {24, 39}, {24, 40}, {24, 38}, {25, 37}, {25, 36}, {25, 512}, {25, 35}, {26, 34}, {26, 32}, {26, 33}, {27, 31}, {27, 30}, {27, 544}, {28, 29}, {28, 28}, {28, 27}, {28, 26}, {29, 25}, {30, 24}, {30, 23}, {30, 576}, {30, 22}, {31, 21}, {32, 20}, {33, 608}, {33, 19}, {34, 18}, {35, 640}, {36, 17}, {38, 672}, {38, 16}, {41, 704}, {41, 15}, {43, 14}, {44, 736}, {46, 13}, {47, 768}, {49, 12}, {50, 800}, {53, 11}, {54, 832}, {58, 864}, {58, 10}, {61, 896}, {63, 9}, {65, 928}, {69, 960}, {69, 8}, {73, 992}, {77, 1024}, {79, 7}, {89, 6}, {102, 5}, {121, 4}, {148, 3}, {192, 2}, {283, 1}},
{{4, 97}, {4, 89}, {4, 113}, {4, 81}, {4, 121}, {4, 105}, {4, 129}, {4, 137}, {4, 145}, {4, 73}, {5, 153}, {5, 65}, {5, 64}, {5, 161}, {5, 62}, {5, 63}, {5, 169}, {5, 57}, {5, 61}, {5, 60}, {5, 59}, {5, 177}, {5, 56}, {5, 58}, {5, 185}, {5, 55}, {5, 54}, {5, 52}, {5, 53}, {5, 193}, {5, 50}, {5, 51}, {5, 49}, {5, 47}, {5, 45}, {5, 46}, {5, 48}, {5, 201}, {6, 44}, {6, 42}, {6, 41}, {6, 43}, {6, 209}, {6, 40}, {6, 39}, {6, 38}, {6, 217}, {6, 36}, {6, 37}, {6, 35}, {6, 225}, {6, 34}, {6, 32}, {6, 33}, {6, 31}, {7, 30}, {7, 28}, {7, 233}, {7, 29}, {7, 241}, {7, 26}, {7, 27}, {7, 25}, {7, 24}, {7, 249}, {7, 23}, {7, 22}, {7, 256}, {7, 21}, {8, 20}, {8, 19}, {8, 18}, {8, 272}, {8, 17}, {9, 16}, {9, 288}, {9, 15}, {9, 304}, {9, 14}, {10, 320}, {10, 13}, {10, 336}, {11, 12}, {11, 352}, {11, 11}, {12, 10}, {12, 368}, {13, 384}, {13, 9}, {14, 400}, {14, 416}, {14, 8}, {15, 432}, {16, 7}, {16, 448}, {17, 464}, {18, 480}, {18, 6}, {19, 496}, {20, 512}, {21, 5}, {23, 544}, {24, 4}, {25, 576}, {28, 608}, {30, 3}, {30, 640}, {33, 672}, {36, 704}, {38, 2}, {40, 736}, {43, 768}, {47, 800}, {50, 832}, {54, 864}, {55, 1}, {57, 896}, {61, 928}, {65, 960}, {69, 992}, {74, 1024}},
{{3, 89}, {3, 97}, {3, 65}, {3, 59}, {3, 63}, {3, 73}, {3, 64}, {3, 61}, {3, 58}, {3, 105}, {3, 57}, {3, 60}, {3, 113}, {3, 81}, {3, 56}, {3, 53}, {3, 62}, {3, 52}, {3, 121}, {3, 129}, {3, 50}, {3, 55}, {3, 54}, {3, 47}, {3, 43}, {3, 137}, {3, 46}, {3, 42}, {3, 51}, {3, 49}, {3, 48}, {4, 40}, {4, 45}, {4, 44}, {4, 41}, {4, 145}, {4, 39}, {4, 153}, {4, 161}, {4, 36}, {4, 37}, {4, 38}, {4, 35}, {4, 34}, {4, 33}, {4, 169}, {4, 32}, {4, 31}, {4, 177}, {4, 30}, {4, 28}, {4, 25}, {4, 29}, {4, 185}, {4, 26}, {4, 27}, {4, 23}, {4, 193}, {4, 24}, {4, 21}, {4, 22}, {5, 20}, {5, 201}, {5, 209}, {5, 18}, {5, 19}, {5, 17}, {5, 217}, {5, 16}, {5, 15}, {5, 225}, {5, 233}, {5, 14}, {5, 13}, {6, 241}, {6, 12}, {6, 249}, {6, 256}, {6, 11}, {7, 10}, {7, 272}, {7, 9}, {7, 288}, {8, 8}, {8, 304}, {8, 7}, {9, 320}, {9, 6}, {9, 336}, {10, 352}, {11, 5}, {11, 368}, {12, 384}, {12, 4}, {13, 400}, {14, 416}, {15, 432}, {15, 3}, {16, 448}, {17, 464}, {18, 480}, {19, 496}, {19, 2}, {20, 512}, {23, 544}, {25, 576}, {27, 1}, {28, 608}, {30, 640}, {34, 672}, {36, 704}, {39, 736}, {43, 768}, {46, 800}, {50, 832}, {53, 864}, {56, 896}, {61, 928}, {65, 960}, {69, 992}, {73, 1024}},
{{2, 10}, {2, 11}, {2, 9}, {2, 8}, {2, 13}, {2, 60}, {2, 44}, {2, 46}, {2, 45}, {2, 54}, {2, 51}, {2, 12}, {2, 47}, {2, 52}, {2, 50}, {2, 7}, {2, 41}, {2, 14}, {2, 61}, {2, 6}, {2, 37}, {2, 55}, {2, 59}, {2, 15}, {2, 62}, {2, 42}, {2, 63}, {2, 38}, {2, 57}, {2, 48}, {2, 43}, {2, 65}, {2, 40}, {2, 56}, {2, 64}, {2, 33}, {2, 32}, {2, 34}, {2, 53}, {2, 58}, {2, 36}, {2, 16}, {2, 49}, {2, 35}, {2, 81}, {2, 17}, {2, 39}, {2, 31}, {2, 5}, {2, 28}, {2, 18}, {2, 27}, {2, 30}, {2, 25}, {2, 73}, {2, 26}, {2, 89}, {2, 24}, {2, 29}, {2, 23}, {2, 19}, {2, 20}, {2, 21}, {2, 97}, {2, 4}, {2, 22}, {2, 105}, {2, 113}, {2, 3}, {2, 121}, {2, 129}, {3, 137}, {3, 2}, {3, 145}, {3, 153}, {3, 161}, {3, 169}, {3, 177}, {4, 185}, {4, 193}, {4, 1}, {4, 201}, {4, 209}, {4, 217}, {5, 225}, {5, 233}, {5, 241}, {5, 249}, {6, 256}, {6, 272}, {7, 288}, {8, 304}, {8, 320}, {9, 336}, {10, 352}, {11, 368}, {11, 384}, {12, 400}, {13, 416}, {14, 432}, {15, 448}, {16, 464}, {18, 480}, {19, 496}, {20, 512}, {22, 544}, {25, 576}, {27, 608}, {30, 640}, {33, 672}, {36, 704}, {39, 736}, {43, 768}, {46, 800}, {50, 832}, {54, 864}, {57, 896}, {62, 928}, {65, 960}, {69, 992}, {73, 1024}}};

void distributePartitions(
          const int partitions,
          const int join_count,
          const int current_join,
          int &first,
          int &last) const;

void copyTaskAttributesFromThis(std::shared_ptr<PlanOperation> to);

std::vector<std::shared_ptr<Task> > build_probe_side(std::string prefix,
                                                          field_t &fields,
                                                          uint probe_par,
                                                          uint32_t bits1,
                                                          uint32_t bits2,
                                                          std::shared_ptr<Task> input);

std::vector<std::shared_ptr<Task> > build_hash_side(std::string prefix,
                                                          field_t &fields,
                                                          uint probe_par,
                                                          uint32_t bits1,
                                                          uint32_t bits2,
                                                          std::shared_ptr<Task> input);

};

}
}


#endif  // SRC_LIB_ACCESS_RADIXJOIN_H_
